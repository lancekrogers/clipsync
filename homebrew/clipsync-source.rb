# Homebrew formula for building ClipSync from source
class ClipsyncSource < Formula
  desc "Secure clipboard synchronization across devices"
  homepage "https://github.com/lancekrogers/clipsync"
  license "MIT"
  
  # Stable release
  url "https://github.com/lancekrogers/clipsync/archive/refs/tags/v0.1.0.tar.gz"
  sha256 "PLACEHOLDER_SHA256_SOURCE"
  
  # Development version
  head "https://github.com/lancekrogers/clipsync.git", branch: "develop"

  # Build dependencies
  depends_on "rust" => :build
  depends_on "pkg-config" => :build
  depends_on "make" => :build
  
  # Runtime dependencies
  depends_on "openssl@3"
  depends_on "zstd"
  
  # Platform-specific dependencies
  on_macos do
    depends_on xcode: ["14.0", :build]
  end
  
  on_linux do
    depends_on "libx11"
    depends_on "libxcb"
    depends_on "wayland"
    depends_on "wayland-protocols"
  end

  # Build options
  option "with-debug", "Build with debug symbols"
  option "without-hotkeys", "Build without global hotkey support"

  def install
    # Set up environment
    ENV["CARGO_HOME"] = buildpath/".cargo"
    
    # Configure OpenSSL paths
    if OS.mac?
      ENV["OPENSSL_ROOT_DIR"] = Formula["openssl@3"].opt_prefix
      ENV["OPENSSL_LIB_DIR"] = Formula["openssl@3"].opt_lib
      ENV["OPENSSL_INCLUDE_DIR"] = Formula["openssl@3"].opt_include
      ENV["OPENSSL_STATIC"] = "0"
    end

    # Set build profile
    args = []
    args << "--release" unless build.with?("debug")
    
    # Build features
    features = []
    features << "no-hotkeys" if build.without?("hotkeys")
    args << "--features=#{features.join(",")}" unless features.empty?

    # Build and install
    system "cargo", "install", *args, "--path", ".", "--root", prefix
    
    # Install additional files
    (etc/"clipsync").install "config.example.toml" if File.exist?("config.example.toml")
    
    # Create directories
    (var/"log").mkpath
    (var/"lib/clipsync").mkpath
  end

  def post_install
    # Create default config if it doesn't exist
    config_path = etc/"clipsync/config.toml"
    unless config_path.exist?
      config_path.write <<~EOS
        # ClipSync Configuration
        # Generated by Homebrew
        
        listen_addr = ":8484"
        advertise_name = "#{ENV["USER"]}-clipsync"
        
        [auth]
        ssh_key = "~/.ssh/id_ed25519"
        authorized_keys = "~/.config/clipsync/authorized_keys"
        
        [clipboard]
        max_size = 5242880  # 5MB
        sync_primary = true
        history_size = 20
        history_db = "~/.local/share/clipsync/history.db"
        
        [hotkeys]
        toggle_sync = "Ctrl+Shift+Cmd+C"
        show_history = "Ctrl+Shift+V"
        
        [security]
        encryption = "aes-256-gcm"
        compression = "zstd"
      EOS
    end
  end

  service do
    run [opt_bin/"clipsync", "start", "--daemon", "--config", etc/"clipsync/config.toml"]
    keep_alive true
    log_path var/"log/clipsync.log"
    error_log_path var/"log/clipsync.error.log"
    environment_variables PATH: std_service_path_env
  end

  test do
    # Test version output
    assert_match "clipsync", shell_output("#{bin}/clipsync --version")
    
    # Test config validation
    assert_match "Configuration", shell_output("#{bin}/clipsync config show")
    
    # Test that the binary runs without crashing
    system bin/"clipsync", "status"
  end

  def caveats
    <<~EOS
      ClipSync has been installed!

      To get started:
        1. Configure your SSH keys:
           clipsync auth init

        2. Start the service:
           brew services start clipsync-source

        3. Add authorized devices:
           clipsync auth add <public-key>

      Configuration file is located at:
        #{etc}/clipsync/config.toml

      Logs are stored at:
        #{var}/log/clipsync.log

      For more information:
        clipsync --help
    EOS
  end
end